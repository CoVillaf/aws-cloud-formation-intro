AWSTemplateFormatVersion: "2010-09-09"
Description: Full Stack CloudFormation Template

Parameters:
    MyKeyPair:
        Description: Please select the keypair from below dropdown
        Type: AWS::EC2::KeyPair::KeyName
    VpcId:
        Description: Please Enter the VPC ID below.
        Type: AWS::EC2::VPC::Id
    SubnetIds:
        Description: Enter the subnets below
        Type: List<AWS::EC2::Subnet::Id>

Mappings:
    RegionInMap:
        us-east-1:
            AMI: ami-0be2609ba883822ec
        us-west-1:
            AMI: ami-0be2609ba883822ec

Resources:
    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            SecurityGroups:
                -   !Ref ALBSecurityGroup
            Subnets: !Ref SubnetIds

    LoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 80
            Protocol: HTTP
            DefaultActions:
                -   Type: forward
                    TargetGroupArn:
                        !Ref TargetGroup

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Port: 80
            Protocol: HTTP
            VpcId: !Ref VpcId

    AutoScalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            AvailabilityZones: !GetAZs
            LaunchConfigurationName: !Ref LaunchConfiguration
            MinSize: 1
            MaxSize: 3
            TargetGroupARNs:
                -   !Ref TargetGroup

    LaunchConfiguration:
        Type: AWS::AutoScaling::LaunchConfiguration
        Metadata:
            Comment: Install php and httpd
            AWS::CloudFormation::Init:
                config:
                    packages:
                        yum:
                            httpd: []
                            php: []
                    files:
                        /var/www/html/index.php:
                            content: !Sub |
                                <?php print "Hello world, this is united pahar groups landing page."?>
                    services:
                        sysvinit:
                            httpd:
                                enabled: true
                                ensureRunning: true
        Properties:
            KeyName: !Ref MyKeyPair
            InstanceType: t2.micro
            SecurityGroups:
                -   !Ref EC2SecurityGroup
            ImageId:
                Fn::FindInMap:
                    -   RegionInMap
                    -   !Ref AWS::Region
                    -   AMI
            UserData:
                Fn::Base64:
                    !Sub |
                        #!/bin/bash -xe
                        yum install -y aws-cfn-bootstrap
                        /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfiguration --region ${AWS::Region}

    ALBSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: ALB Security group
            VpcId: !Ref VpcId
            SecurityGroupIngress:
                -   IpProtocol: tcp
                    FromPort: 80
                    ToPort: 80
                    CidrIp: 0.0.0.0/0
    EC2SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: EC2 Instance
    EC2InboundRule:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
            IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            SourceSecurityGroupId:
                !GetAtt
                -   ALBSecurityGroup
                -   GroupId
            GroupId:
                !GetAtt
                -   EC2SecurityGroup
                -   GroupId

Outputs:
    PublicDnsName:
        Description: Public Dns Name for application
        Value: !Sub 'http://${LoadBalancer.DNSName}'
